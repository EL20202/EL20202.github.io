.flex-horizontal {
    display: flex;
    flex-direction: row;
}

.flex-vertical {
    display: flex;
    flex-direction: column;
}

.flex-wrap {
    flex-wrap: wrap;
    max-width: 100%;
}

fieldset {
    min-width: fit-content;
}

:where(input[type="number"]) {
    width: 5em;
}

.smallPadding {
    padding: 3px 0px;
}

.equipSelector {
    min-width: 100%;
    width: fit-content;
    padding: 1px 0px;
}

.equipSelector > select {
    display: block;
    width: 100%;
}

.applyButton {
    width: fit-content;
    padding: 5px;
    margin: 4px auto 0px;
}

.mediumNumberEntry {
    width: 6em;
}

.smallNumberEntry  {
    width: 3.5em;
}
#circuitSelector {
    margin-left: 10px;
    margin-top: auto;
    margin-bottom: auto;
    height: fit-content;
    height: 295px;
}
.containerRoot {
    width: 475px;
}
.containerPage {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    border: 2px lightgray solid;
    height: 200px;

    width: 100%;
}

.containerPage:not(.active) {
    display: none;
}

.pageSelector {
    display: flex;
    flex-direction: row;
}

.pageSelector > button {
    border: none;
    background-color: white;
    cursor: pointer;
}

.pageSelector > button.active {
    background-color: lightgray;
    font-weight: bold;
    cursor: auto;
}

.multiElementContainer {
    width:fit-content;
    height: 220px;
    padding: 0px;
    overflow-y: scroll;
    border: 1px solid gray;
}

.fillWidth {
    min-width: 100%;
}

.multiElementContainer > button {
    display: block;
    background-color: white;
    min-width: 100%;
    text-align: left;
    border-width: 0 1px 1px 0;
    border-color: darkgray;
}
.multiElementContainer > button:last-child {
    border-bottom: 0;
}

.multiElementContainer > button.active {
    background-color: #aaf;
}

.multiElementContainer > button:active {
    background-color: #777;
}

.multiElementContainer > button:active.active {
    background-color: #33f;
    color: white;
}

#resetConsumables {
    position: absolute;
    bottom: 5px;
    right: 5px;
}

#consumableOverlapWarning {
    color: red;
}

.hidden {
    display: none;
}

#consumableSelector {
    width: 200px;
    height: 295px;

    position:relative;
}

#enemySelector > select {
    width: 200px
}

input[type="radio"][disabled] {
    cursor: not-allowed;
}